@model eConnect.Model.UserCSPDetail

@{
    ViewBag.Title = "CSP View";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";

    //string PassportSizePhotoPath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\PassportSizePhoto\\" + Model.PassportSizePhotoName;
    //string VoterIdImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\VoterIdImage\\" + Model.VoterIdImageName;
    //string PANImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\PANImage\\" + Model.PANImageName;
    //string AadharImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\AadharImage\\" + Model.AadharImageName;
    //string LatestEducationProofImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\LatestEducationProofImage\\" + Model.LatestEducationProofImageName;
    //string IIBFCertificationImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\IIBFCertificationImage\\" + Model.IIBFCertificationImageName;

    string PassportSizePhotoPath = Model.CSPId + "/PassportSizePhoto/" + Model.PassportSizePhotoName;
    string VoterIdImagePath = Model.CSPId + "/VoterIdImage/" + Model.VoterIdImageName;
    string PANImagePath = Model.CSPId + "/PANImage/" + Model.PANImageName;
    string AadharImagePath = Model.CSPId + "/AadharImage/" + Model.AadharImageName;
    string LatestEducationProofImagePath = Model.CSPId + "/LatestEducationProofImage/" + Model.LatestEducationProofImageName;
    string IIBFCertificationImagePath = Model.CSPId + "/IIBFCertificationImage/" + Model.IIBFCertificationImageName;
}
    <section class="section">
        <div class="card">
            <div class="card-body">
                <h6 class="text-primary mb-3"> CSP Detail</h6>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CSPName, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.CSPName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CSPCode, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.CSPCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BranchCode, htmlAttributes: new { @class = "" })
                            @*@Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                            @Html.DropDownList("BranchCode", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })

                        </div>
                    </div>
                    @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "" })
                       @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "required-field" })
                    @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })


                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.BankAccount, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.IFSC, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.IFSC, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CertificateStatus, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.CertificateStatus, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "" })
                        @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly",@disabled = "disabled" })
                    </div>
                </div>*@
                </div>
                <h6 class="text-primary mb-3"> Personal Detail</h6>

                <div class="row">
                    @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>*@
                    @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>*@
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "" })
                            @Html.DropDownList("Country", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "" })
                            @Html.DropDownList("State", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "" })
                            @Html.DropDownList("City", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })

                        </div>
                    </div>
                    @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PAN, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.PAN, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>

                </div>*@
                    @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.VoterId, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.VoterId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>*@
                    @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AadharNo, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.AadharNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>*@
                    @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>*@
                    @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>*@
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "" })

                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                        </div>
                    </div>
                    @*<div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmergencyContactNumber, htmlAttributes: new { @class = "" })

                        @Html.EditorFor(model => model.EmergencyContactNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>*@
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "" })

                            @*@Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                            @Html.DropDownList("Location", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })


                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "" })

                            @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })*@
                            @Html.DropDownList("Category", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" })


                        </div>
                    </div>
                </div>

                <h6 class="text-primary mb-3"> Upload</h6>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PassportSizePhoto, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.PassportSizePhotoName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @*@Html.ActionLink("PreviewImage", "PreviewImage", new { id = Model.CSPId, fileName = Model.PassportSizePhoto, folderName = "PassportSizePhoto" })*@
                            @if (!string.IsNullOrEmpty(Model.PassportSizePhotoName))
                            {
                                @*<a href="javascript:PreviewImage('@Model.PassportSizePhotoName');">PreviewImage</a>*@

                                <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@PassportSizePhotoPath" target="_blank">PreviewImage</a>
                            }
                            else
                            { <span style="color:red;">No image uploaded.</span>
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.VoterIdImage, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.VoterIdImageName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                            @if (!string.IsNullOrEmpty(Model.VoterIdImageName))
                            {
                                @*<a href="javascript:PreviewImage('@Model.VoterIdImageName');">PreviewImage</a>*@
                                <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@VoterIdImagePath" target="_blank">PreviewImage</a>

                            }
                            else
                            { <span style="color:red;">No image uploaded.</span>
                            }
                        </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PANImage, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.PANImageName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                        @if (!string.IsNullOrEmpty(Model.PANImageName))
                        {
                          @*<a href="javascript:PreviewImage('@Model.PANImageName');">PreviewImage</a>*@
                          <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@PANImagePath" target="_blank">PreviewImage</a>
                        }
                        else
                        { <span style="color:red;">No image uploaded.</span>
                        }
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AadharImage, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.AadharImageName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                        @if (!string.IsNullOrEmpty(Model.AadharImageName))
                        {
                            @*<a href="javascript:PreviewImage('@Model.AadharImageName');">PreviewImage</a>*@
                            <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@AadharImagePath" target="_blank">PreviewImage</a>
                        }
                        else
                        { <span style="color:red;">No image uploaded.</span>
                        }
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.LatestEducationProofImage, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.LatestEducationProofImageName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                        @if (!string.IsNullOrEmpty(Model.LatestEducationProofImageName))
                        {
                        @*<a href="javascript:PreviewImage('@Model.LatestEducationProofImageName');">PreviewImage</a>*@
                        <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@LatestEducationProofImagePath" target="_blank">PreviewImage</a>
                        }
                        else
                        { <span style="color:red;">No image uploaded.</span>
                        }
                    </div>
                </div>
                @if (Model.CertificateStatus == "Yes")
                {
                    <div id="CertificationImageStatus" class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IIBFCertificationImage, htmlAttributes: new { @class = "" })

                            @Html.EditorFor(model => model.IIBFCertificationImageName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                            @if (!string.IsNullOrEmpty(Model.IIBFCertificationImageName))
                            {
                                @*<a href="javascript:PreviewImage('@Model.IIBFCertificationImageName');">PreviewImage</a>*@
                                <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@IIBFCertificationImagePath" target="_blank">PreviewImage</a>
                            }
                            else
                            { <span style="color:red;">No image uploaded.</span>
                            }
                        </div>
                    </div>
                }

                </div>
              
            </div>

            <div class="my-4 text-right">


                @Html.ActionLink("Back", "Index", "Menu", new { @class = "btn btn-dark px-4 mr-2" })

            </div>
        </div>
    </section>

    <script>
        debugger;
        function PreviewImage(url)
        {
            var win = window.open();
            win.document.write("<iframe width='100%' height='100%' scrolling='no' src='" + url + "'></iframe>");
       }
    </script>
