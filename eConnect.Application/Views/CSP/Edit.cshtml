@model eConnect.Model.UserCSPDetail

@{
    ViewBag.Title = "Edit CSP";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";

    string PassportSizePhotoPath =   Model.CSPId + "/PassportSizePhoto/" + Model.PassportSizePhotoName;
    string VoterIdImagePath =  Model.CSPId + "/VoterIdImage/" + Model.VoterIdImageName;
    string PANImagePath = Model.CSPId + "/PANImage/" + Model.PANImageName;
    string AadharImagePath = Model.CSPId + "/AadharImage/" + Model.AadharImageName;
    string LatestEducationProofImagePath =Model.CSPId + "/LatestEducationProofImage/" + Model.LatestEducationProofImageName;
    string IIBFCertificationImagePath =Model.CSPId + "/IIBFCertificationImage/" + Model.IIBFCertificationImageName;
    //string PassportSizePhotoPath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\PassportSizePhoto\\" + Model.PassportSizePhotoName;
    //string VoterIdImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\VoterIdImage\\" + Model.VoterIdImageName;
    //string PANImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\PANImage\\" + Model.PANImageName;
    //string AadharImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\AadharImage\\" + Model.AadharImageName;
    //string LatestEducationProofImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\LatestEducationProofImage\\" + Model.LatestEducationProofImageName;
    //string IIBFCertificationImagePath = @System.Web.Configuration.WebConfigurationManager.AppSettings["CSPFilePath"] + Model.CSPId + "\\IIBFCertificationImage\\" + Model.IIBFCertificationImageName;

}

@using (Html.BeginForm("Edit", "CSP", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.CSPId)
    @Html.HiddenFor(model => model.PassportSizePhotoName)
    @Html.HiddenFor(model => model.VoterIdImageName)
    @Html.HiddenFor(model => model.PANImageName)
    @Html.HiddenFor(model => model.AadharImageName)
    @Html.HiddenFor(model => model.LatestEducationProofImageName)
    @Html.HiddenFor(model => model.IIBFCertificationImageName)
    <section class="section">
        <div class="card">
            <div class="card-body">
                @*<h6 class="text-primary mb-3"> Account Detail</h6>*@
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CSPName, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.CSPName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CSPName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CSPCode, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.CSPCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CSPCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.BranchCode, htmlAttributes: new { @class = "required-field" })
                            @*@Html.EditorFor(model => model.BranchCode, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("BranchCode", null, htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.BranchCode, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ExpiryDate, htmlAttributes: new { @class = "required-field" })
                            <div class="input-group ">
                                @Html.EditorFor(model => model.ExpiryDate, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i class="mdi mdi-calendar"></i>
                                    </span>
                                </div>
                                @Html.ValidationMessageFor(model => model.ExpiryDate, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BankName, htmlAttributes: new { @class = "required-field" })
                        @Html.EditorFor(model => model.BankName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BankName, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.BankAccount, htmlAttributes: new { @class = "required-field" })
                        @Html.EditorFor(model => model.BankAccount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BankAccount, "", new { @class = "text-danger" })

                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IFSC, htmlAttributes: new { @class = "required-field" })
                            @Html.EditorFor(model => model.IFSC, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IFSC, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.CertificateStatus, htmlAttributes: new { @class = "required-field" })
                            @Html.DropDownList("CertificateStatus", null, htmlAttributes: new { @class = "form-control" })
                            @*@Html.EditorFor(model => model.CertificateStatus, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.ValidationMessageFor(model => model.CertificateStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "required-field" })
                            @*@Html.DropDownList("Status", (IEnumerable<SelectListItem>)ViewBag.Status, new { @class = "form-control" })*@
                            @Html.DropDownList("Status", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <h6 class="text-primary mb-3"> Personal Detail</h6>

                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "required-field" })

                            @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "required-field" })

                            @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "required-field" })
                            @Html.DropDownList("Country", null, htmlAttributes: new { @class = "form-control", @onchange = "return bindState();" })
                            @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "required-field" })
                            @Html.DropDownList("State", null, htmlAttributes: new { @class = "form-control", @onchange = "return bindCity();" })
                            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "required-field" })
                            @Html.DropDownList("City", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PAN, htmlAttributes: new { @class = "required-field" })

                            @Html.EditorFor(model => model.PAN, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PAN, "", new { @class = "text-danger" })
                        </div>

                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.VoterId, htmlAttributes: new { @class = "required-field" })

                            @Html.EditorFor(model => model.VoterId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.VoterId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AadharNo, htmlAttributes: new { @class = "required-field" })

                            @Html.EditorFor(model => model.AadharNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AadharNo, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Education, htmlAttributes: new { @class = "required-field" })

                            @Html.EditorFor(model => model.Education, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Education, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "required-field" })

                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Mobile, htmlAttributes: new { @class = "required-field" })

                            @Html.EditorFor(model => model.Mobile, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Mobile, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.EmergencyContactNumber, htmlAttributes: new { @class = "required-field" })

                            @Html.EditorFor(model => model.EmergencyContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmergencyContactNumber, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "required-field" })

                            @*@Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("Location", null, htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "required-field" })

                            @*@Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })*@
                            @Html.DropDownList("Category", null, htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })

                        </div>
                    </div>
                </div>

                <h6 class="text-primary mb-3"> Upload</h6>
                <div class="row">
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PassportSizePhoto, htmlAttributes: new { @class = "" })
                            <input type="file" id="PassportSizePhoto" name="PassportSizePhoto" class="btn btn-outline-primary btn-block fileup-btn" onchange="show(this)" />
                            @Html.ValidationMessageFor(model => model.PassportSizePhoto, "", new { @class = "text-danger" })
                            @if (!string.IsNullOrEmpty(Model.PassportSizePhotoName))
                            {
                                @*<a href="javascript:PreviewImage('@PassportSizePhotoPath');" target="_blank">PreviewImage</a>*@
                                <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@PassportSizePhotoPath" target="_blank">PreviewImage</a>
                            }
                            else
                            { <span style="color:red;">No image uploaded.</span>
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.VoterIdImage, htmlAttributes: new { @class = "" })
                            <input type="file" id="VoterIdImage" name="VoterIdImage" class="btn btn-outline-primary btn-block fileup-btn" onchange="show(this)" />

                            @Html.ValidationMessageFor(model => model.VoterIdImage, "", new { @class = "text-danger" })


                            @if (!string.IsNullOrEmpty(Model.VoterIdImageName))
                            {
                                @*<a href="javascript:PreviewImage('@Model.VoterIdImageName');">PreviewImage</a>*@
                                <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@VoterIdImagePath" target="_blank">PreviewImage</a>
                            }
                            else
                            { <span style="color:red;">No image uploaded.</span>
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.PANImage, htmlAttributes: new { @class = "" })
                            <input type="file" id="PANImage" name="PANImage" class="btn btn-outline-primary btn-block fileup-btn" onchange="show(this)" />

                            @Html.ValidationMessageFor(model => model.PANImage, "", new { @class = "text-danger" })
                            @if (!string.IsNullOrEmpty(Model.PANImageName))
                            {
                                @*<a href="javascript:PreviewImage('@Model.PANImageName');">PreviewImage</a>*@
                                <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@PANImagePath" target="_blank">PreviewImage</a>
                            }
                            else
                            { <span style="color:red;">No image uploaded.</span>
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.AadharImage, htmlAttributes: new { @class = "" })
                            <input type="file" id="AadharImage" name="AadharImage" class="btn btn-outline-primary btn-block fileup-btn" onchange="show(this)" />

                            @Html.ValidationMessageFor(model => model.AadharImage, "", new { @class = "text-danger" })
                            @if (!string.IsNullOrEmpty(Model.AadharImageName))
                            {
                                @*<a href="javascript:PreviewImage('@Model.AadharImageName');">PreviewImage</a>*@
                                <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@AadharImagePath" target="_blank">PreviewImage</a>
                            }
                            else
                            { <span style="color:red;">No image uploaded.</span>
                            }
                        </div>
                    </div>
                    <div class="col-md-4">
                        <div class="form-group">
                            @Html.LabelFor(model => model.LatestEducationProofImage, htmlAttributes: new { @class = "" })
                            <input type="file" id="LatestEducationProofImage" name="LatestEducationProofImage" class="btn btn-outline-primary btn-block fileup-btn" onchange="show(this)" />
                            @Html.ValidationMessageFor(model => model.LatestEducationProofImage, "", new { @class = "text-danger" })
                            @if (!string.IsNullOrEmpty(Model.LatestEducationProofImageName))
                            {
                                @*<a href="javascript:PreviewImage('@Model.LatestEducationProofImage');">PreviewImage</a>*@
                                <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@LatestEducationProofImagePath" target="_blank">PreviewImage</a>
                            }
                            else
                            { <span style="color:red;">No image uploaded.</span>
                            }
                        </div>
                    </div>
                    @if (Model.CertificateStatus == "Yes")
                    {
                        <div id="CertificationImageStatus" class="col-md-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.IIBFCertificationImage, htmlAttributes: new { @class = "" })
                                <input type="file" id="IIBFCertificationImage" name="IIBFCertificationImage" class="btn btn-outline-primary btn-block fileup-btn" onchange="show(this)" />

                                @Html.ValidationMessageFor(model => model.IIBFCertificationImage, "", new { @class = "text-danger" })
                                @if (!string.IsNullOrEmpty(Model.IIBFCertificationImageName))
                                {
                                    <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@IIBFCertificationImagePath" target="_blank">PreviewImage</a>
                                    @*<a href="javascript:PreviewImage('@Model.IIBFCertificationImageName');">PreviewImage</a>*@
                                }
                                else
                                { <span style="color:red;">No image uploaded.</span>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <div id="CertificationImageStatus" class="col-md-4" style="display: none" ;>
                            <div class="form-group">
                                @Html.LabelFor(model => model.IIBFCertificationImage, htmlAttributes: new { @class = "" })
                                <input type="file" id="IIBFCertificationImage" name="IIBFCertificationImage" class="btn btn-outline-primary btn-block fileup-btn" onchange="show(this)" />

                                @Html.ValidationMessageFor(model => model.IIBFCertificationImage, "", new { @class = "text-danger" })
                                @if (!string.IsNullOrEmpty(Model.IIBFCertificationImageName))
                                {
                                    <a href="~/ImageViewer/Getimage/?Type=CSP+&File=+@IIBFCertificationImagePath" target="_blank">PreviewImage</a>
                                    @*<a href="javascript:PreviewImage('@Model.IIBFCertificationImageName');">PreviewImage</a>*@
                                }
                                else
                                { <span style="color:red;">No image uploaded.</span>
                                }
                            </div>
                        </div>
                    }
                </div>

                <div class="my-4 text-right">
                    <button class="btn btn-primary px-4" type="submit">Save</button> |
                   
                    @Html.ActionLink("Cancel", "Index", "Menu", new { @class = "btn btn-dark px-4 mr-2" })

                </div>
                <div class="text-left">

                </div>
            </div>

        </div>
    </section>
}

<script>

        debugger;
        function PreviewImage(url)
        {
            

             $.ajax({
                type: "POST",
                 url: '@Url.Action("Getimage", "ImageViewer")', 
                //data: { roleid: roleid },
                dataType: 'html',
                success: function ()
                {

                   
                }
            });
            //var win = window.open();
            //var x = 'https://localhost:44331/UploadedFiles/CSP/361/PassportSizePhoto/2.jpg';
            //win.document.write("<iframe width='100%' height='100%' scrolling='no' src='" + x  + "'></iframe>");
            //window.open('')
         }

    //$(document).ready(function () {
    //    $("#Country").change(function () {
    //        var id = $(this).val();
    //        $("#State").empty();
    //        $("#City").empty();
    //        $.get("BindStates", { country_id: id }, function (data) {
    //            var v = "<option>---Select---</option>";
    //            $.each(data, function (i, v1) {
    //                v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
    //            });
    //            $("#State").html(v);

    //        });
    //    });
    //    $("#State").change(function () {
    //        var sid = $(this).val();
    //        $("#City").empty();
    //        $.get("BindCity", { state_id: sid }, function (data) {
    //            var v = "<option>---Select---</option>";
    //            $.each(data, function (i, v1) {
    //                v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
    //            });
    //            $("#City").html(v);
    //        });
    //    });
    //});

        function bindState() {
            var sid = $("#Country").val();
        $("#City").empty();

        $.ajax({
            url: '@Url.Action("BindStates", "CSP")',
            data: { country_id: sid },
            type: 'GET',
            success: function (data)
            {
                var v = "<option>---Select---</option>";
                $.each(data, function (i, v1) {
                    v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                });
                $("#State").html(v);
            }
        });
    }
            function bindCity() {
        var sid = $("#State").val();
        $("#City").empty();

        $.ajax({
            url: '@Url.Action("BindCity", "CSP")',
            data: { state_id: sid },
            type: 'GET',
            success: function (data)
            {
                var v = "<option>---Select---</option>";
                $.each(data, function (i, v1) {
                    v += "<option value=" + v1.Value + ">" + v1.Text + "</option>";
                });
                $("#City").html(v);
            }
        });
    }
</script>