@model eConnect.Model.ManageTechSupport
@{ ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";

    string Receipt =  Model.Id + "/TechSupportScreenshort/" + Model.Recieptpic;
    }
@*<h2></h2>*@
<section class="section">
    <div class="card">
        <div class="card-body">
            <h6 class="text-primary mb-3"> Request Detail</h6>
            <div class="row">

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RequestId, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.RequestId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProblemType, htmlAttributes: new { @class = "required-field" })
                        @Html.DropDownList("TechProblemType", new SelectList(ViewBag.ProblemList, "ProblemTypeId", "Name"), new { id = "TechProblemType", @class = "form-control", @readonly = "readonly" })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MobileNo, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.RequestedDate, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.RequestedDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CurrentStatus, htmlAttributes: new { @class = "" })
                        @Html.DropDownList("Status", (SelectListItem[])ViewBag.EditedStatus, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CompletionDate, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.CompletionDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.AnyDeskDetails, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.AnyDeskDetails, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                @*</div>*@

            </div>

            <h6 class="text-primary mb-3"> Resolution Detail</h6>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ScreenShot, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.Recieptpic, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                        @if (!string.IsNullOrEmpty(Model.Recieptpic))
                        {
                        @*<a href="javascript:PreviewImage('@Model.Recieptpic');">PreviewImage</a>*@ 
                        <a href="~/ImageViewer/Getimage/?Type=Tech+&File=+@Receipt" target="_blank">PreviewImage</a>
                        
                        }
                        else
                        {
                            <span style="color:red;">No image uploaded.</span>}
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ResolutionDetail, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.ResolutionDetail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>

                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>

            </div>
            @*<div class="my-4 text-right">
                    <button class="btn btn-primary px-4" type="submit">Save</button>
                </div>*@

        </div>
    </div>
    <div class="my-4 text-right">
        @Html.ActionLink("Cancel", "Index", "Menu", new { @class = "btn btn-dark px-4 mr-2" })
    </div>
</section>
<script>
    debugger;
    function PreviewImage(url) {
        var win = window.open();
        win.document.write("<iframe width='100%' height='100%' scrolling='no' src='" + url + "'></iframe>");
    }
</script>
