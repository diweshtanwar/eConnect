@model eConnect.Model.Userinput

@{ ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_LayoutMain.cshtml";
    string PassportSizePhotoPath = Model.UserType + "/" + Model.Id + "/UserPassportSizePhoto/" + Model.PassportSizePic;
  }
@*<h2>Details</h2>*@

<section class="section">
    <div class="card">
        <div class="card-body">
            <h6 class="text-primary mb-3"> Personal Details</h6>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FatherName, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MotherName, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "" })
                    @Html.DropDownList("Country", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })

                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "" })

                        @Html.DropDownList("State", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "" })

                        @Html.DropDownList("City", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.MobileNumber, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmergencyContactNumber, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.EmergencyContactNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "" })
                        @Html.DropDownList("Department", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "" })
                        @Html.DropDownList("Designation", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })

                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.UserType, htmlAttributes: new { @class = "required-field" })
                        @Html.DropDownList("UserType", null, htmlAttributes: new { @class = "form-control", @readonly = "readonly" })
                      
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "d" })
                        @Html.EditorFor(model => model.Qualification, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    </div>
                </div>
            </div>


            <h6 class="text-primary mb-3"> Upload</h6>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(model => model.PassportSizePic, htmlAttributes: new { @class = "" })
                        @Html.EditorFor(model => model.PassportSizePic, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                        @if (!string.IsNullOrEmpty(Model.PassportSizePic))
                        {
                            @*<a href="javascript:PreviewImage('@Model.PassportSizePic');">PreviewImage</a>*@
                            <a href="~/ImageViewer/Getimage/?Type=User+&File=+@PassportSizePhotoPath" target="_blank">PreviewImage</a>
                        }
                        else
                        {
                            <span style="color:red;">No image uploaded.</span>}
                    </div>
                </div>

            </div>
            <div>

                @Html.ActionLink("Cancel", "Index", "Menu", new { @class = "btn btn-dark px-4 mr-2" })
            </div>
        </div>
    </div>
</section>
<script>
    debugger;
    function PreviewImage(url) {
        var win = window.open();
        win.document.write("<iframe width='100%' height='100%' scrolling='no' src='" + url + "'></iframe>");
    }
</script>


